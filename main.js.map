{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/manfacturer/manfacturer.component.css","webpack:///./src/app/manfacturer/manfacturer.component.html","webpack:///./src/app/manfacturer/manfacturer.component.ts","webpack:///./src/app/models/models.component.css","webpack:///./src/app/models/models.component.html","webpack:///./src/app/models/models.component.ts","webpack:///./src/app/services/manufacture.service.ts","webpack:///./src/app/services/model.service.ts","webpack:///./src/app/services/viewinventory.service.ts","webpack:///./src/app/viewinventory/viewinventory.component.css","webpack:///./src/app/viewinventory/viewinventory.component.html","webpack:///./src/app/viewinventory/viewinventory.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {  Routes} from '@angular/router';\nimport {ManfacturerComponent} from './manfacturer/manfacturer.component';\nimport {ModelsComponent} from './models/models.component';\nimport {ViewInventoryComponent} from './viewinventory/viewinventory.component';\n\nexport const routes: Routes=[\n      { path: '', redirectTo: '/manufacturer', pathMatch: 'full' },\n      { path: 'manufacturer', component: ManfacturerComponent },\n      { path: 'models', component: ModelsComponent },\n      { path: 'viewinventory', component: ViewInventoryComponent },\n     \n     \n      \n    ]\n\n","module.exports = \"/* Add a black background color to the top navigation */\\r\\n.topnav {\\r\\n    background-color: #333;\\r\\n    overflow: hidden;\\r\\n  }\\r\\n/* Style the links inside the navigation bar */\\r\\n.topnav a {\\r\\n    float: left;\\r\\n    color: #f2f2f2;\\r\\n    text-align: center;\\r\\n    padding: 14px 16px;\\r\\n    text-decoration: none;\\r\\n    font-size: 17px;\\r\\n  }\\r\\n/* Change the color of links on hover */\\r\\n.topnav a:hover {\\r\\n    background-color: #ddd;\\r\\n    color: black;\\r\\n  }\\r\\n/* Add a color to the active/current link */\\r\\n.topnav a.active {\\r\\n    background-color: #4CAF50;\\r\\n    color: white;\\r\\n  }\\r\\n  \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsdURBQXVEO0FBQ3ZEO0lBQ0ksc0JBQXNCO0lBQ3RCLGdCQUFnQjtFQUNsQjtBQUVBLDhDQUE4QztBQUM5QztJQUNFLFdBQVc7SUFDWCxjQUFjO0lBQ2Qsa0JBQWtCO0lBQ2xCLGtCQUFrQjtJQUNsQixxQkFBcUI7SUFDckIsZUFBZTtFQUNqQjtBQUVBLHVDQUF1QztBQUN2QztJQUNFLHNCQUFzQjtJQUN0QixZQUFZO0VBQ2Q7QUFFQSwyQ0FBMkM7QUFDM0M7SUFDRSx5QkFBeUI7SUFDekIsWUFBWTtFQUNkIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBBZGQgYSBibGFjayBiYWNrZ3JvdW5kIGNvbG9yIHRvIHRoZSB0b3AgbmF2aWdhdGlvbiAqL1xyXG4udG9wbmF2IHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIH1cclxuICBcclxuICAvKiBTdHlsZSB0aGUgbGlua3MgaW5zaWRlIHRoZSBuYXZpZ2F0aW9uIGJhciAqL1xyXG4gIC50b3BuYXYgYSB7XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIGNvbG9yOiAjZjJmMmYyO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgcGFkZGluZzogMTRweCAxNnB4O1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgZm9udC1zaXplOiAxN3B4O1xyXG4gIH1cclxuICBcclxuICAvKiBDaGFuZ2UgdGhlIGNvbG9yIG9mIGxpbmtzIG9uIGhvdmVyICovXHJcbiAgLnRvcG5hdiBhOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNkZGQ7XHJcbiAgICBjb2xvcjogYmxhY2s7XHJcbiAgfVxyXG4gIFxyXG4gIC8qIEFkZCBhIGNvbG9yIHRvIHRoZSBhY3RpdmUvY3VycmVudCBsaW5rICovXHJcbiAgLnRvcG5hdiBhLmFjdGl2ZSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNENBRjUwO1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gIH1cclxuICAiXX0= */\"","module.exports = \"<link rel=\\\"stylesheet\\\" href=\\\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\\\">\\n<!DOCTYPE html>\\n<html>\\n  \\n    <div class=\\\"topnav\\\" id=\\\"myTopnav\\\">\\n          \\n  <a [routerLink]=\\\"['/manufacturer']\\\" class=\\\"active\\\"> Manufacturer</a>  <div class=\\\"col-md-1\\\"></div>\\n  <a [routerLink]=\\\"['/models']\\\"> Models</a>  <div class=\\\"col-md-1\\\"></div>\\n  <a [routerLink]=\\\"['/viewinventory']\\\"> View Inventory</a>\\n</div>\\n   \\n\\n  <router-outlet></router-outlet>\\n  \\n</html>\\n\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'carinventory';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n//import {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { routes } from './app-routing.module';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { ManfacturerComponent } from './manfacturer/manfacturer.component';\nimport { ViewInventoryComponent } from './viewinventory/viewinventory.component';\nimport { ModelsComponent } from './models/models.component';\nimport {ManufactureService} from './services/manufacture.service';\nimport {ModelService} from './services/model.service';\nimport {viewInventoryService} from './services/viewinventory.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ManfacturerComponent,\n    ViewInventoryComponent,\n    ModelsComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(routes),\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [ManufactureService,ModelService,viewInventoryService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21hbmZhY3R1cmVyL21hbmZhY3R1cmVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\\n<div style=\\\"text-align:center\\\">\\n   \\n  <div class=\\\"container\\\">\\n    <div class=\\\"col-md-5\\\">\\n      <div class=\\\"form-area\\\"> \\n        <form role=\\\"form\\\">\\n          <br style=\\\"clear:both\\\"> &nbsp;  &nbsp;  &nbsp;  &nbsp;\\n          <h3 style=\\\"margin-bottom: 25px; text-align: center;\\\">Add Manufacturers</h3>\\n          <div class=\\\"col-md-6\\\"></div>\\n          \\n          <div class=\\\"form-group\\\">\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" name=\\\"name\\\" placeholder=\\\"Name\\\" [(ngModel)]=\\\"name\\\" required>\\n          </div>\\n         \\n          <button type=\\\"button\\\" id=\\\"submit\\\" name=\\\"submit\\\" class=\\\"btn btn-primary pull-center\\\" (click)=\\\"save()\\\">Save Manfacturer</button>\\n        </form>\\n        <br>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"container\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <h1> List</h1>\\n        <table class=\\\"table table-bordered table-striped table-hover\\\">\\n      <thead>\\n        <tr>\\n          <th class=\\\"text-center\\\">S.No</th>\\n          <th class=\\\"text-center\\\">Manfacturer Name</th>\\n          \\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let g of getmanfucture, let i= index\\\">\\n          <td>{{ i+1 }}</td>\\n          <td>{{ g.ManufactureName }}</td>\\n          \\n         \\n        </tr>\\n      </tbody>\\n    </table>\\n   </div>\\n</div>\"","import { Component, OnInit, AfterViewInit } from '@angular/core';\ndeclare const $;\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ManufactureService } from '../services/manufacture.service';\n\n\n@Component({\n  selector: 'app-manfacturer',\n  templateUrl: './manfacturer.component.html',\n  styleUrls: ['./manfacturer.component.css']\n})\nexport class ManfacturerComponent implements OnInit {\n\n\n  uid:string='';\n  name : string;\n  emergency: any=[];\n  error:any;\n  getmanfucture:any;\n  deleteRes:any;\n  editedManfacture: any ={};\n constructor(private router:Router, private manfacturer:ManufactureService) {\n   \n   }\n  \n  ngOnInit(){\n   \n    \n   this.getManfacturer();\n  }\n  getManfacturer(){\n    this.manfacturer.getManfacturer().subscribe(\n      res=>{\n        this.getmanfucture = res\n        console.log(this.getmanfucture);\n      }\n    );\n  }\n  public refreshList(){\n    this.getManfacturer();\n  } \n   \n  save() {\n   debugger;\n    this.manfacturer.addManfacturer(this.name).subscribe(\n      res => {\n        this.emergency = res;\n       window.alert('Added Succefully....');\n      this. refreshList()\n      },\n      (err) => {\n        this.error = err;\n        window.alert('Invalida data');\n      }\n    );\n   \n  }\n  \n    \n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGVscy9tb2RlbHMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div style=\\\"text-align:center\\\">\\n        \\n  <div class=\\\"container\\\">\\n      <div class=\\\"col-md-6\\\">\\n          <div class=\\\"form-area\\\"> \\n              <form role=\\\"form\\\"  ng-controller=\\\"DemoController\\\" name=\\\"myForm\\\" novalidate>\\n                      <br style=\\\"clear:both\\\">\\n                      <h3 style=\\\"margin-bottom: 25px; text-align: center;\\\">Add Models</h3>\\n                      <div class=\\\"form-group\\\">\\n                       <label for=\\\"exampleInputEmail1\\\">Manfacturers</label>\\n                       <select id=\\\"account_id\\\" #account_id=\\\"ngModel\\\" class=\\\"hideLabel form-control\\\" [(ngModel)]=\\\"mid\\\" name=\\\"mid\\\" (change)=\\\"selectName()\\\" >  \\n                       <option selected=\\\"\\\" value=\\\"\\\"></option>  \\n                        <option [ngValue]=\\\"m.MafID\\\" *ngFor=\\\"let m of getManuList\\\">  \\n                                    {{m.ManufactureName}}  \\n                         </option>  \\n                       </select> \\n                      </div>\\n                      <label for=\\\"exampleInputEmail1\\\">Model Name</label>\\n                      <div class=\\\"form-group\\\">\\n                              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"modelname\\\" name=\\\"modelname\\\" placeholder=\\\"Name\\\" [(ngModel)]=\\\"modelname\\\" required>\\n                      </div>\\n                      <label for=\\\"exampleInputEmail1\\\">Model Color</label>\\n                      <div class=\\\"form-group\\\">\\n                              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"color\\\" name=\\\"color\\\" placeholder=\\\"Color\\\" [(ngModel)]=\\\"color\\\" required>\\n                      </div>\\n                      <label for=\\\"exampleInputEmail1\\\">Model Year</label>\\n                      <div class=\\\"form-group\\\">\\n                              <input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"year\\\" name=\\\"year\\\" placeholder=\\\"Manufacturing Year\\\" [(ngModel)]=\\\"year\\\" required>\\n                      </div>\\n                      <label for=\\\"exampleInputEmail1\\\">Registration Number</label>\\n                      <div class=\\\"form-group\\\">\\n                              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"regno\\\" name=\\\"registration number\\\" placeholder=\\\"Registration Number\\\" [(ngModel)]=\\\"registrationno\\\" required>\\n                      </div>\\n                      <label for=\\\"exampleInputEmail1\\\">Info About Model</label>\\n                      <div class=\\\"form-group\\\">\\n                              <input type=\\\"text\\\"  style=\\\"height:200px\\\"class=\\\"form-control\\\" id=\\\"Description\\\" name=\\\"name\\\" placeholder=\\\"Description\\\" [(ngModel)]=\\\"description\\\" required>\\n                      </div>\\n                      <div class=\\\"form-group\\\"> \\n                              <label for=\\\"time\\\" class=\\\"col-sm-3 control-label\\\">Picture </label>\\n                                <div class=\\\"col-sm-9\\\">\\n                              <input type=\\\"file\\\"  name=\\\"fileToUpload\\\" id=\\\"fileToUpload\\\" required />\\n                            </div>\\n                              </div>\\n\\n                              \\n                          \\n                      <button type=\\\"button\\\"  class=\\\"btn btn-primary pull-center\\\" (click)=\\\"saveModel()\\\">Save Details</button>\\n                    </form>\\n              </div>\\n         </div>\\n   </div>\\n</div>\\n      \\n      \\n      \\n      \"","import { Component, OnInit, ElementRef } from '@angular/core';\nimport { Router, ActivatedRoute,NavigationExtras } from '@angular/router';\nimport {ModelService}  from '../services/model.service';\n\n\n@Component({\n  selector: 'app-models',\n  templateUrl: './models.component.html',\n  styleUrls: ['./models.component.css']\n})\nexport class ModelsComponent implements OnInit {\n  getManuList:any;\n  modelno:any;\n  modelname:any;\n  description:any;\n  color:any;\n  mid:string;\n  serialnumber:any;\n  registrationno:any;\n  year:any;\n  manfacture:any;\n  fileid:string;\n  details:any;\n\n  errorMessage:string=\"\";\n  error:boolean=false;\n  successMessage:string=\"\";\n  success:boolean=false;\n  constructor(private router:Router, private model:ModelService,private activatedRoute: ActivatedRoute, private elem:ElementRef) { }\n\n  ngOnInit() {\n    this.getManufactureList();\n    this.getmodels();\n  }\n\n  getManufactureList(){\n    this.model.getManfacturer().subscribe(\n      res=>{\n        this.getManuList = res\n        console.log(this.getManuList);\n        //alert(this.getManuList);\n      }\n    );\n\n    \n  }\n  selectName(){\n    alert(this.mid)\n  } \n  public saveModel(){\n    let files= this.elem.nativeElement.querySelector('#fileToUpload').files;\n   debugger;\n  \n    let formdata = new FormData();\n    let file = files[0];\n    let filename= file.name;\n   // let filename= this.getfilename(this.uid);\n    debugger;\n    formdata.append('fileToUpload',file,filename);\n    this.model.uploadImage(formdata).subscribe\n    (res => this.modelSave(res));\n   \n  }\n  getmodels(){\n  this.manfacture.getDetails(this.mid).subscribe(data=>{\n    this.details = data;\n    alert(data)\n  });\n}\n  public modelSave(data:any):void{\n    //let filename =this.files.filename;\n   //this.model = data;\n    let photo = data.filename;\n   \n    debugger;\n    this.model.modelUpdate(this.mid, this.modelname,this.color,\n      this.registrationno,this.year,this.description,photo\n     \n      ).subscribe(success=>{\n      this.success=!this.success;\n      this.error=false;\n      this.successMessage=\"model Updated\";\n      alert(this.successMessage);\n    },\n    error=>{\n      this.error=!this.error;\n      this.errorMessage=\"Unexpected Error Occured\";\n    });\n    \n    }\n    \n  }\n\n","import { Injectable, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http';\r\n//import 'rxjs/add/operator/map';\r\n//import 'rxjs/add/operator/do';\r\n\r\nimport { map, catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ManufactureService {\r\n \r\n   private _producturl='app/products.json';\r\n  handleError: any;\r\n  headers: any;\r\n   constructor(private http: HttpClient){\r\n    //this.uid= this.loginservice.getIndex();\r\n   \r\n   }\r\n\r\n   baseUrl = 'http://localhost.com/';\r\n   emergency=[];\r\n   \r\n  addManfacturer(name:string) {\r\n    var headers= new Headers();\r\n    headers.append('Content-Type','application/X-www-form=urlencoded');\r\n    let body = JSON.stringify({name:name});\r\n    debugger;\r\n    return this.http.post('http://localhost:8081/carinventory/add_manfacturer.php',body);\r\n     \r\n  }\r\n  getManfacturer() {\r\n    var headers= new Headers();\r\n    headers.append('Content-Type','application/X-www-form=urlencoded');\r\n    //let body = JSON.stringify({name:name});\r\n    debugger;\r\n    return this.http.get('http://localhost:8081/carinventory/get_manfacture.php');\r\n     \r\n  }\r\n  deleteManfacturer(uid :string,q:Number) {\r\n    var headers= new Headers();\r\n    headers.append('Content-Type','application/X-www-form=urlencoded');\r\n    let body = JSON.stringify({ lid: uid,q:q});\r\n    debugger;\r\n    return this.http.post('http://localhost:8081/carinventory/delete_manfacture.php',body);\r\n      \r\n  }\r\n  \r\n}","import { Injectable, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { map, catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ModelService {\r\n \r\n   private _producturl='app/products.json';\r\n  handleError: any;\r\n  headers: any;\r\n   constructor(private http: HttpClient){\r\n    //this.uid= this.loginservice.getIndex();\r\n   \r\n   }\r\n\r\n   baseUrl = 'http://localhost.com/';\r\n   emergency=[];\r\n   \r\n  AddModel() {\r\n    var headers= new Headers();\r\n    headers.append('Content-Type','application/X-www-form=urlencoded');\r\n    let body = JSON.stringify({});\r\n    debugger;\r\n    return this.http.post('http://localhost:8081/carinventory/add_model.php',body);\r\n     \r\n  }\r\n  getManfacturer() {\r\n    var headers= new Headers();\r\n    headers.append('Content-Type','application/X-www-form=urlencoded');\r\n    //let body = JSON.stringify({name:name});\r\n    debugger;\r\n    return this.http.get('http://localhost:8081/carinventory/get_manfacture.php');\r\n     \r\n  }\r\n  uploadImage(formdata:any){\r\n        var headers= new Headers();\r\n        headers.append('enctype', 'multipart/form-data');\r\n        headers.append('Accept', 'application/json');\r\n        //let options = new RequestOptions({ headers: this.headers });\r\n        debugger;\r\n        return this.http.post('http://localhost:8081/carinventory/uploadfile.php',formdata);\r\n      \r\n  }\r\n  modelUpdate( modelno:string, modelname:string, color:string,registrationno:string,\r\n   year:string, description:string,photo:string ){\r\n    var headers= new Headers();\r\n    headers.append('Content-Type','application/X-www-form=urlencoded');\r\n    debugger;\r\n    //let options = new RequestOptions({ header: headers });\r\n    let body = JSON.stringify({modelno:modelno,modelname:modelname,color:color,registrationno:registrationno,\r\n      year:year,description:description,photo:photo});\r\n    return this.http.post('http://localhost:8081/carinventory/add_model.php',body);\r\n  }\r\n  \r\n}","import { Injectable, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http';\r\n\r\n\r\n@Injectable()\r\nexport class viewInventoryService {\r\n \r\n   private _producturl='app/products.json';\r\n  handleError: any;\r\n  headers: any;\r\n   constructor(private http: HttpClient){\r\n    //this.uid= this.loginservice.getIndex();\r\n   \r\n   }\r\n\r\n   baseUrl = 'http://localhost.com/';\r\n   emergency=[];\r\n   \r\n \r\n  viewInventory() {\r\n    var headers= new Headers();\r\n    headers.append('Content-Type','application/X-www-form=urlencoded');\r\n    //let body = JSON.stringify({name:name});\r\n    debugger;\r\n    return this.http.get('http://localhost:8081/carinventory/view_inventory.php');\r\n     \r\n  }\r\n  deleteModels(mid :string,q:Number) {\r\n    var headers= new Headers();\r\n    headers.append('Content-Type','application/X-www-form=urlencoded');\r\n    let body = JSON.stringify({ mid: mid,q:q});\r\n    debugger;\r\n    return this.http.post('http://localhost:8081/carinventory/delete_models.php',body);\r\n      \r\n  }\r\n  \r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdpbnZlbnRvcnkvdmlld2ludmVudG9yeS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <h3 align=\\\"center\\\" background-color=\\\"blue\\\">LIST OF MODELS</h3> &nbsp;\\n      <table class=\\\"table table-bordered table-striped table-hover\\\">\\n    <thead>\\n      <tr>\\n        <th class=\\\"text-center\\\">S.No</th>\\n        <th class=\\\"text-center\\\">Manfacture Name</th>\\n        <th class=\\\"text-center\\\">Model Name</th>\\n        <th class=\\\"text-center\\\">Color</th>\\n        <th class=\\\"text-center\\\">Year Of Manfacture</th>\\n        <th class=\\\"text-center\\\">Registration No</th>\\n        <th class=\\\"text-center\\\"> Info About Model</th>\\n        <th class=\\\"text-center\\\"> Options</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let l of list, let i= index\\\">\\n        <td>{{ i+1 }}</td>  \\n        <td>{{ l.ManufactureName }}</td>\\n        <td>{{ l.Modelname }}</td>\\n        <td>{{ l.Color }}</td>\\n        <td>{{ l.Year}}</td>\\n        <td>{{ l.RegistrationNo }}</td>\\n        <td>{{ l.Descripton}}</td>\\n        <td>\\n          <button class=\\\"btn btn-danger\\\"\\n                        (click)=\\\"sellModel()\\\"> Sell\\n                       <i class=\\\"fa fa-delete\\\"></i>\\n              </button>\\n              <a href=\\\"\\\" class=\\\"btn btn-warning\\\" data-toggle=\\\"modal\\\" data-target=\\\"#modal-delay\\\"(click)=\\\"showEditProductForm(item)\\\" >View Images </a>\\n          \\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n\\n  <div class=\\\"modal fade\\\" id=\\\"modaluloadpic\\\">\\n      <div class=\\\"modal-dialog\\\">\\n      <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n      <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span></button>\\n      <h4 class=\\\"modal-title\\\">View</h4>\\n      </div>\\n      <form action=\\\"\\\" method=\\\"POST\\\">\\n      <div class=\\\"modal-body\\\" *ngFor=\\\"let doc of appDoc\\\">\\n      <img [src] =\\\"doc.displayfile\\\" alt =\\\"Doc\\\" width=\\\"100%\\\" height=\\\"auto\\\"/>\\n      </div>\\n      \\n      </form>\\n      </div>\\n      </div>\\n      </div> \\n\\n  \\n  </div>\\n</div>\\n\\n\\n\"","import { Component, OnInit, AfterViewInit } from '@angular/core';\ndeclare const $;\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { viewInventoryService } from '../services/viewinventory.service';\n\n\n@Component({\n  selector: 'app-viewinventory',\n  templateUrl: './viewinventory.component.html',\n  styleUrls: ['./viewinventory.component.css']\n})\nexport class ViewInventoryComponent implements OnInit {\n\n \n  mid:string='';\n  name : string;\n  emergency: any=[];\n  error:any;\n  list:any;\n  deleteRes:any;\n  editedManfacture: any ={};\n constructor(private router:Router, private manfacturer:viewInventoryService) {\n   \n   }\n  \n  ngOnInit(){\n   \n    \n   this.viewInventoryList();\n  }\n  viewInventoryList(){\n    this.manfacturer.viewInventory().subscribe(\n      res=>{\n        this.list = res\n        console.log(this.list);\n      }\n    );\n  }\n  public refreshList(){\n    \n   }\n   \n \n   sellModel(){\n    var q = 1\n    this.manfacturer.deleteModels(this.mid,q).subscribe(\n      res=>{\n        this.deleteRes = res\n        alert(res)\n        this.refreshList();\n      }\n    );\n  }\n    \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}